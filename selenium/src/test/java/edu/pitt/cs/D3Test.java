package edu.pitt.cs;

import static org.hamcrest.MatcherAssert.assertThat;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;

import static org.hamcrest.CoreMatchers.containsString;
import static org.hamcrest.CoreMatchers.endsWith;

public class D3Test {

    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @Before
    public void setUp() {
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--headless");
        options.addArguments("--no-sandbox");
        options.addArguments("--disable-dev-shm-usage");
        driver = new ChromeDriver(options);
        // Set implicit wait to give elements time to appear
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void tEST1LINKS() {
        driver.get("http://localhost:8080/");

        driver.manage().window().setSize(new Dimension(1512, 945));
        {
            WebElement element = driver.findElement(By.linkText("Reset"));
            String attribute = element.getAttribute("href");
            vars.put("hrefValue", attribute);
        }
        assertEquals(vars.get("hrefValue").toString(), "http://localhost:8080/reset");
    }

    @Test
    public void tEST2RESET() {
        driver.get("http://localhost:8080/");

        driver.manage().window().setSize(new Dimension(1512, 879));
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        driver.findElement(By.id("rentID")).sendKeys("1");
        driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
        driver.findElement(By.id("rentID")).sendKeys("2");
        driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
        driver.findElement(By.id("rentID")).sendKeys("3");
        driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
        driver.findElement(By.linkText("Reset")).click();
        driver.findElement(By.linkText("Catalog")).click();
        assertThat(driver.findElement(By.xpath("//*[@id=\"cat-id1\"]")).getText(), is("ID 1. Jennyanydots"));
        assertThat(driver.findElement(By.xpath("//*[@id=\"cat-id2\"]")).getText(), is("ID 2. Old Deuteronomy"));
        assertThat(driver.findElement(By.xpath("//*[@id=\"cat-id3\"]")).getText(), is("ID 3. Mistoffelees"));
    }

    @Test
    public void tEST3CATALOG() {
        driver.get("http://localhost:8080/");

        driver.manage().window().setSize(new Dimension(1512, 945));
        driver.findElement(By.linkText("Catalog")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("li:nth-of-type(2) > img	")));
        }
        {
            WebElement element = driver.findElement(By.cssSelector("li:nth-of-type(2) > img"));
            String attribute = element.getAttribute("src");
            vars.put("imageSrc", attribute);
        }
        assertEquals(vars.get("imageSrc").toString(), "http://localhost:8080/images/cat2.jpg");
    }

    @Test
    public void tEST4LISTING() {
        driver.get("http://localhost:8080/");
        
        driver.manage().window().setSize(new Dimension(1512, 945));
        driver.findElement(By.linkText("Catalog")).click();
        vars.put("itemCount", driver.findElements(By.xpath("//ul[contains(@class,\'list-group\')]/li[contains(@class,\'list-group-item\')]")).size());
        assertEquals(vars.get("itemCount").toString(), "3");
        vars.put("thirdItemText", driver.findElement(By.xpath("//ul[contains(@class,\'list-group\')]/li[contains(@class,\'list-group-item\')][3]")).getText());
        assertEquals(vars.get("thirdItemText").toString(), "ID 3. Mistoffelees");
    }

    @Test
    public void tEST5RENTACAT() {
        driver.get("http://localhost:8080/");
        driver.manage().window().setSize(new Dimension(1512, 945));
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        {
            WebElement element = driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).clickAndHold().perform();
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebElement element = driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).release().perform();
        }
        driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
        driver.findElement(By.cssSelector(".form-group:nth-child(4) .btn")).click();
        driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
        assertThat(driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).getText(), is("Rent"));
        assertThat(driver.getTitle(), is("CS1632 D3"));
    }

    @Test
    public void tEST6RENT() {
        // js.executeScript("document.cookie = \"1=false\";document.cookie = \"2=false\";document.cookie = \"3=false\";");
        driver.get("http://localhost:8080/");
        driver.manage().window().setSize(new Dimension(1440, 778));
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        driver.findElement(By.id("rentID")).click();
        driver.findElement(By.id("rentID")).sendKeys("1");
        driver.findElement(By.cssSelector(".form-group:nth-child(3) .btn")).click();
        assertThat(driver.findElement(By.xpath("//div/ul/li")).getText(), is("Rented out"));
        assertThat(driver.findElement(By.xpath("//div/ul/li[2]")).getText(), is("ID 2. Old Deuteronomy"));
        assertThat(driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[3]")).getText(), is("ID 3. Mistoffelees"));
        assertThat(driver.findElement(By.xpath("//*[@id=\"rentResult\"]")).getText(), is("Success!"));
    }

    @Test
    public void tEST7RETURN() {
        driver.get("http://localhost:8080/");
        driver.manage().window().setSize(new Dimension(709, 809));
        js.executeScript("document.cookie = \"1=false\";document.cookie = \"2=true\";document.cookie = \"3=false\";");
        driver.findElement(By.linkText("Rent-A-Cat")).click();
        driver.findElement(By.id("returnID")).click();
        driver.findElement(By.id("returnID")).sendKeys("2");
        driver.findElement(By.cssSelector(".form-group:nth-child(4) .btn")).click();
        assertThat(driver.findElement(By.xpath("//div/ul/li")).getText(), is("ID 1. Jennyanydots"));
        assertThat(driver.findElement(By.xpath("//div/ul/li[2]")).getText(), is("ID 2. Old Deuteronomy"));
        assertThat(driver.findElement(By.xpath("//div[@id=\'listing\']/ul/li[3]")).getText(), is("ID 3. Mistoffelees"));
        assertThat(driver.findElement(By.xpath("//*[@id=\"returnResult\"]")).getText(), is("Success!"));
    }

    @Test
    public void tEST8FEEDACAT() {
        driver.get("http://localhost:8080/");
        driver.manage().window().setSize(new Dimension(709, 809));
        driver.findElement(By.linkText("Feed-A-Cat")).click();
        {
            List<WebElement> elements = driver.findElements(By.xpath("//button[contains(.,\'Feed\')]"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void tEST9FEED() {
        driver.get("http://localhost:8080/");

        driver.manage().window().setSize(new Dimension(1512, 945));
        driver.findElement(By.linkText("Feed-A-Cat")).click();
        driver.findElement(By.id("catnips")).click();
        driver.findElement(By.id("catnips")).sendKeys("6");
        driver.findElement(By.cssSelector(".btn")).click();
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(50));
            wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//*[@id=\'feedResult\' and text()=\'Nom, nom, nom.\']")));
        }
        assertThat(driver.findElement(By.id("feedResult")).getText(), is("Nom, nom, nom."));
    }

    @Test
    public void tEST10GREETACAT() {
        driver.get("http://localhost:8080/");
        driver.manage().window().setSize(new Dimension(709, 809));
        driver.findElement(By.linkText("Greet-A-Cat")).click();
        assertThat(driver.findElement(By.xpath("//*[@id=\"greeting\"]/h4")).getText(), is("Meow!Meow!Meow!"));
    }

    @Test
    public void tEST11GREETACATWITHNAME() {
        driver.get("http://localhost:8080/");
        driver.manage().window().setSize(new Dimension(709, 809));
        driver.findElement(By.linkText("Greet-A-Cat")).click();
        driver.get("http://localhost:8080/greet-a-cat/Jennyanydots");
        assertThat(driver.findElement(By.xpath("//*[@id=\"greeting\"]/h4")).getText(), is("Meow! from Jennyanydots."));
    }
}